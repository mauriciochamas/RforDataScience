library(dplyr)
library(tidyverse)
#Variation
#categorical
ggplot(diamonds) + geom_bar(aes(cut))
count(diamonds, cut)
#continuous
ggplot(diamonds) + geom_histogram(aes(carat), binwidth = 0.5)
count(diamonds, cut_width(carat, 0.5))
smaller <- filter(diamonds, carat < 3)
ggplot(smaller, aes(carat)) + geom_histogram(binwidth = 0.1)
#freqpoly
ggplot(smaller, aes(carat, color = cut)) + geom_freqpoly(binwidth = 0.1)
fivenum(diamonds$carat)
diamonds$carat[which.max(diamonds$carat)]
diamonds$carat[27416]
ggplot(smaller, aes(carat)) + geom_histogram(binwidth = 0.01)
ggplot(diamonds, aes(carat)) + geom_histogram(binwidth = 0.01)
ggplot(faithful, aes(eruptions)) + geom_histogram(binwidth = 0.01)
ggplot(diamonds) + geom_histogram(aes(y), binwidth = 0.5)
diamonds %>% filter(y>11) %>% ggplot() + geom_histogram(aes(y, binwidth = 0.5))
ggplot(diamonds) + geom_histogram(aes(y), binwidth = 0.5) + coord_cartesian(ylim = c(0, 50))
ggplot(diamonds) + geom_histogram(aes(y), binwidth = 0.5) + coord_cartesian(ylim = c(0, 5), xlim = c(30, 60))
diamonds %>% filter(y < 3 | y > 15) %>% arrange(y)
summary(diamonds)
ggplot(diamonds) + geom_histogram(aes(x))
summary(diamonds$x)
diamonds %>% filter(x < 3) %>% arrange(x)
ggplot(diamonds) + geom_histogram(aes(z))
summary(diamonds$x)
zeta <- diamonds %>% filter(z < 1 | z > 7) %>% arrange(z)
ggplot(diamonds) + geom_histogram(aes(price), binwidth = 50) + coord_cartesian(xlim = c(0, 2000))
fivenum(diamonds$price)
table(diamonds$carat == 0.99)
table(diamonds$carat == 1)
mean(diamonds$price[diamonds$carat == 0.99])
mean(diamonds$price[diamonds$carat == 1])
#missing values
diamonds2 <- diamonds %>% filter(between(y, 3, 20))
fivenum(diamonds2$y)
diamonds2 <- diamonds %>% mutate(y = ifelse(y < 3 | y > 20, NA, y))
table(is.na(diamonds2$y))
ggplot(diamonds2) + geom_histogram(aes(y))
ggplot(diamonds2, aes(x, y)) + geom_point()
ggplot(diamonds2, aes(x, y)) + geom_point(na.rm = T)
library(nycflights13)
dos <- filter(flights, is.na(dep_time))
head(dos)
table(is.na(flights$dep_time))
select(dos, air_time)
can <- flights %>% mutate(cancelled = is.na(dep_time), sched_hour = sched_dep_time %/% 100,
                   sched_min = sched_dep_time %% 100, sched_dep_time = sched_hour +
                   sched_min/60) 
#%>%
  ggplot(aes(sched_dep_time)) + geom_freqpoly( binwidth = 0.25)
ggplot(can, aes(sched_dep_time)) + geom_bar(binwidth = 0.25) + facet_grid(.~cancelled)
ggplot(can, aes(sched_dep_time)) + geom_histogram(binwidth = 0.25) + facet_grid(.~cancelled)
#covariation
#categorical and continuous variable
ggplot(diamonds, aes(price)) + geom_freqpoly(aes(color = cut), binwidth = 500)
ggplot(diamonds) + geom_bar(aes(cut))
ggplot(diamonds, aes(price, ..density..)) + geom_freqpoly(aes(color = cut), binwidth = 500)
ggplot(diamonds, aes(cut, price)) + geom_boxplot()
#reorder
ggplot(mpg) + geom_boxplot(aes(reorder(class, hwy, FUN = median), hwy))
ggplot(mpg) + geom_boxplot(aes(reorder(class, hwy, FUN = median), hwy)) +
  coord_flip()
#flights
ggplot(can) + geom_freqpoly(aes(dep_time, color = cancelled))
ggplot(can) + geom_freqpoly(aes(dep_time, ..density.., color = cancelled))
table(can$cancelled)
ggplot(can, aes(cancelled, dep_time)) + geom_boxplot() + coord_flip()
ggplot(can, aes(cancelled, dep_time)) + geom_violin()
ggplot(can, aes(dep_time)) + geom_histogram() + facet_grid(.~ cancelled)
#Two categorical variables
ggplot(diamonds) + geom_point(aes(cut, color))
ggplot(diamonds) + geom_count(aes(cut, color))
diamonds %>% count(color, cut) %>%
  ggplot(aes(color, cut)) + geom_tile(aes(fill = n))
count(diamonds, color, cut) %>% ggplot(aes(color, cut)) + geom_tile(aes(fill = n))
flights %>% group_by(year, month, dest) %>% summarise(media = mean(dep_delay, 
            na.rm = T)) %>% ggplot(aes(dest, month)) + geom_tile(aes(fill = media))
flights %>% group_by(year, month, origin) %>% summarise(media = mean(dep_delay, 
            na.rm = T)) %>% ggplot(aes(origin, month)) + geom_tile(aes(fill = media))
count(diamonds, color, cut) %>% ggplot(aes(color, cut)) + geom_tile(aes(fill = n))
count(diamonds, color, cut) %>% ggplot(aes(cut, color)) + geom_tile(aes(fill = n))
#Two continuous variables
ggplot(diamonds) + geom_point(aes(carat, price), alpha = 0.01)
library(hexbin)
ggplot(smaller) + geom_bin2d(aes(carat, price))
ggplot(diamonds) + geom_bin2d(aes(carat, price))
ggplot(smaller) + geom_hex(aes(carat, price))
ggplot(smaller, aes(carat, price)) + geom_boxplot(aes(group = cut_width(carat, 0.5)), varwidth = T)
ggplot(smaller, aes(carat, price)) + geom_boxplot(aes(group = cut_number(carat, 10)))
ggplot(smaller) + geom_freqpoly(aes(carat, color = cut_width(price, 3000)), binwidth = 0.5)
ggplot(smaller, aes(carat, color = cut_width(price, 3000))) + geom_freqpoly(aes(group = cut_number(carat, 10)))
count(diamonds, carat, price) %>% ggplot(aes(carat, price)) + 
  geom_tile(aes(fill = n)) + coord_cartesian(xlim = c(0.2, 1.25), ylim = c(0, 6000))
ggplot(diamonds, aes(price, fill = cut)) + geom_density()
ggplot(diamonds, aes(carat, price, color=cut)) + geom_bar(stat = "identity")
#Patterns
ggplot(faithful) + geom_point(aes(eruptions, waiting))
ggplot(faithful) + geom_bar(aes(eruptions, waiting), stat = "identity")
library(modelr)
mod <- lm(log(price) ~ log(carat), diamonds)
summary(mod)
diamonds2 <- diamonds %>% add_residuals(mod) %>% mutate(resid = exp(resid))
ggplot(diamonds2) + geom_point(aes(carat, resid))
ggplot(diamonds2) + geom_boxplot(aes(cut, resid))
count(diamonds, cut, clarity) %>% ggplot(aes(clarity, cut, fill = n)) + geom_tile()
count(flights, carrier, tailnum)
count(flights, origin, carrier, tailnum)
#http://www.cookbook-r.com/Graphs/
#bar and line graphs
library(ggplot2)
library(dplyr)
library(nycflights13)
dat <- data.frame(time = factor(c("Almuerzo", "Cena"), levels = c("Almuerzo", "Cena")),
                  total.bill = c(14.89, 17.23))
dat
ggplot(dat, aes(time, total.bill)) + geom_bar(stat = "identity")
ggplot(diamonds, aes(cut, price)) + geom_bar(stat = "identity")
ggplot(diamonds, aes(cut, price, fill = cut)) + geom_bar(stat = "identity")
ggplot(diamonds, aes(cut, price, fill = cut)) + geom_bar(stat = "identity") +
  guides(fill = F)
#desired graph
#identity
ggplot(diamonds, aes(cut, price, fill = cut)) + geom_bar(fill = "blue", 
          width = .8, stat = "identity") + guides(fill = F) +
          xlab("Corte") + ylab("Precio") + ggtitle("Precio promedio por corte")
#count
ggplot(flights, aes(origin)) + geom_bar(stat = "count")
#line graphs
group_by(flights, day) %>% summarise( delay = mean(dep_delay, na.rm = T)) %>%
ggplot(aes(day, delay, group = 1)) + geom_line()
group_by(flights, day) %>% summarise( delay = mean(dep_delay, na.rm = T)) %>%
  ggplot(aes(day, delay)) + geom_line(aes(group = 1)) + geom_point()
group_by(flights, day) %>% summarise( delay = mean(dep_delay, na.rm = T)) %>%
  ggplot(aes(day, delay, group = 1)) + 
  geom_line(color = "red", linetype = "dashed", size = 1.5) +
  geom_point(color = "red", size = 4, shape = 21, fill = "blue")
#Graphs with more variables
ggplot(flights, aes(time_hour, dep_delay, fill = origin)) + geom_bar(stat = "identity")
flights <- flights
flights$date <- format(flights$time_hour, format = '%d/%m/%Y')
flights$time <- format(flights$time_hour, format = '%H:%M')
group_by(flights, time) %>% summarise(delay = mean(dep_delay, na.rm = T)) %>%
ggplot(aes(time, delay, group = 1)) + geom_line() 
group_by(flights, month) %>% summarise(delay = mean(dep_delay, na.rm = T)) %>%
  ggplot(aes(month, delay, group = 1)) + geom_line() 
flights$mes <- month.abb[flights$month] %>% factor(levels = month.abb)
group_by(flights, mes) %>% summarise(frec = n()) %>% 
  ggplot(aes(mes, frec, group = 1)) + geom_line()
group_by(flights, mes) %>% summarise(frec = n()) %>% 
  ggplot() + geom_bar(aes(mes, frec, fill = mes), stat = "identity") + guides(fill = F)
ggplot(flights, aes(mes)) + geom_bar()
group_by(flights, mes, origin) %>% summarise(delay = mean(dep_delay, na.rm = T)) %>%
ggplot(aes(mes, delay, fill = origin)) + geom_bar(stat = "identity", 
      position = "dodge", colour = "black") + scale_fill_brewer()
group_by(flights, mes, origin) %>% summarise(delay = mean(dep_delay, na.rm = T)) %>%
  ggplot(aes(origin, delay, fill = mes)) + geom_bar(stat = "identity", 
        position = "dodge", colour = "black") + scale_fill_brewer(palette = "Spectral", 12)
#line
group_by(flights, mes, origin) %>% summarise(delay = mean(dep_delay, na.rm = T)) %>%
ggplot(aes(mes, delay, group = origin)) + geom_line() + geom_point()
group_by(flights, mes, origin) %>% summarise(delay = mean(dep_delay, na.rm = T)) %>%
ggplot(aes(mes, delay, group = origin, colour = origin)) + geom_line() + geom_point()
group_by(flights, mes, origin) %>% summarise(delay = mean(dep_delay, na.rm = T)) %>%
  ggplot(aes(origin, delay, group = mes, colour = mes)) + geom_line() + geom_point()
