remove.packages("tidyverse")
install.packages("forcats")
install.packages("tidyverse")
install.packages("lazyeval")
library(lazyeval)
library(tidyverse)
#Do cars with big engines use more fuel than cars with small engines?
head(mpg)
#displ, a car’s engine size, in litres.
#hwy, a car’s fuel efficiency on the highway, in miles per gallon (mpg)
ggplot(mpg, aes(displ, hwy)) + geom_point()
#Exercises
ggplot(mpg)
head(mtcars)
?mpg
ggplot(mpg, aes(hwy, cyl)) + geom_point()
ggplot(mpg, aes(class, drv)) + geom_point()
ggplot(mpg, aes(displ, hwy, color = class)) + geom_point()
ggplot(mpg, aes(displ, hwy, color = class == "suv")) + geom_point()
ggplot(mpg, aes(displ, hwy, color = class, size = drv)) + geom_point()
ggplot(mpg) + geom_point(aes(displ, hwy, alpha = class, shape = drv))
ggplot(mpg) + geom_point(aes(displ, hwy), color = "green")
ggplot(mpg) + geom_point(aes(displ, hwy), shape = 18)
str(mpg)
table(mpg$hwy)
ggplot(mpg) + geom_point(aes(displ, hwy, color = hwy))
ggplot(mpg) + geom_point(aes(displ, hwy, size = hwy))
ggplot(mpg) + geom_point(aes(displ, hwy, shape = hwy))
ggplot(mpg) + geom_point(aes(displ, hwy, stroke = hwy))
ggplot(mpg) + geom_point(aes(displ, hwy, color = hwy)) + scale_color_gradient(high = "blue")
ggplot(mtcars, aes(wt, mpg)) + geom_point(shape = 21, colour = "black", 
                  fill = "white", size = 5, stroke = 5)
ggplot(mpg) + geom_point(aes(displ, hwy, color = cty<20))
#facets
str(mpg)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class, nrow = 2)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_grid(drv~cyl)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_grid(.~cyl)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_grid(drv~.)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~hwy)
ggplot(mpg) + geom_point(aes(drv, cyl))+ facet_grid(drv~cyl)
#geom
library(dplyr)
library(tidyverse)
ggplot(mpg, aes(displ, hwy)) + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_smooth()
ggplot(mpg, aes(displ, hwy)) + geom_smooth(aes(linetype = drv))
ggplot(mpg, aes(displ, hwy)) + geom_smooth(aes(color = drv))
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(color = drv)) + 
  geom_smooth(aes(linetype = drv, color = drv))
ggplot(mpg) + geom_smooth(aes(displ, hwy))
ggplot(mpg) + geom_smooth(aes(displ, hwy, group = drv))
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth()
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(color = class)) + geom_smooth()
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(color = class)) +
  geom_smooth(data = filter(mpg, class == "subcompact"), se = F) +
  geom_smooth(data = filter(mpg, class == "suv"))
ggplot(mpg, aes(displ, hwy)) + geom_area()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv), show.legend = T) + 
  geom_point(show.legend = T) + geom_smooth(se = FALSE, show.legend = T)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv), show.legend = F) + 
  geom_point() + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point() + 
  geom_smooth()

ggplot() + 
  geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(se = F)
ggplot(mpg, aes(displ, hwy)) + geom_point() + 
  geom_smooth(aes(group = drv), se = F)
ggplot(mpg, aes(displ, hwy, color = drv)) + geom_point() + 
  geom_smooth(aes(group = drv), se = F)
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(color = drv)) + 
  geom_smooth(se = F)
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(color = drv)) + 
  geom_smooth(aes(linetype = drv), se = F)
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(color = drv))
#statistical transformations
ggplot(diamonds, aes(cut)) + geom_bar()
ggplot(diamonds, aes(cut)) + stat_count()
ggplot(mpg) + geom_bar(aes(displ, hwy), stat = "identity")
ggplot(diamonds, aes(cut, ..prop..)) + geom_bar(aes(group = 1))
ggplot(diamonds, aes(cut)) + geom_bar()
ggplot(diamonds) + stat_summary(aes(cut, depth), fun.ymin = min, 
                                fun.ymax = max, fun.y = mean)
ggplot(diamonds) + stat_summary(aes(cut, depth), fun.ymin = min, 
                                fun.ymax = max)
ggplot(diamonds, aes(cut)) + geom_col()
ggplot(diamonds) + geom_bar(aes(cut, ..prop.., group = 1))
#color
ggplot(diamonds) + geom_bar(aes(cut, color = cut))
ggplot(diamonds) + geom_bar(aes(cut, fill = cut))
ggplot(diamonds) + geom_bar(aes(cut, fill = clarity))
ggplot(diamonds) + geom_bar(aes(cut, fill = color))
ggplot(mpg) + geom_bar(aes(class, fill = drv))
ggplot(mpg) + geom_bar(aes(class, color = class))
ggplot(diamonds, aes(cut, color = clarity)) + geom_bar(fill = NA, 
                          position = "identity")
ggplot(diamonds) + geom_bar(aes(cut, fill = clarity), position = "fill")
ggplot(mpg) + geom_bar(aes(class, fill = drv), position = "fill")
ggplot(diamonds) + geom_bar(aes(cut, fill = clarity), position = "dodge")
ggplot(mpg) + geom_bar(aes(class, fill = drv), position = "dodge")
ggplot(mpg) + geom_point(aes(displ, hwy))
ggplot(mpg) + geom_point(aes(displ, hwy), position = "jitter")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) + 
  geom_point()
#coordinate systems
ggplot(mpg, aes(class, hwy)) + geom_boxplot() + coord_flip()
nz <- map_data("nz")
ggplot(nz, aes(long, lat, group = group)) + geom_polygon(fill = "white",
              color = "black") + coord_quickmap()
bar <- ggplot(diamonds) + geom_bar(aes(cut, fill = cut), show.legend = F, width = 1) +
  theme(aspect.ratio = 1) + labs(x = NULL, y = NULL)
bar
bar + coord_flip()
bar + coord_polar()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) + geom_point() +
  geom_abline() + coord_fixed()
