library(dplyr)
library(tidyverse)
ggplot(diamonds, aes(carat, price)) + geom_hex()
ggsave("diamonds.pdf")
write_csv(diamonds, "diamonds.csv")
#Tibbles
vignette("tibble")
dia <- as_tibble(diamonds)
dia
as_tibble(iris)
tibble(x = 1:5, y = 1, z = x ^ 2+ y)
tb <- tibble(`:)` = "smile", 
            ` ` = "space",
            `2000` = "number")
tb
tribble(
  ~x, ~y, ~z,
  "a", 2, 3.6,
  "b", 1, 8.5)
tibble(
  a = lubridate::now() + runif(1e3) * 86400,
  b = lubridate::today() + runif(1e3) * 30,
  c = 1:1e3,
  d = runif(1e3),
  e = sample(letters, 1e3, replace = TRUE))
nycflights13::flights %>% 
  print(n = 10, width = Inf)
df <- tibble(x = runif(5), y = rnorm(5))
df %>% .$x
mt <- as_tibble(mtcars)
mt
mtcars
df <- data.frame(abc = 1, xyz = "a")
df$x
df[, "xyz"]
df[, c("abc", "xyz")]
#import data
library(tidyverse)
#read_csv() reads comma delimited files, 
#read_csv2() reads semicolon separated files (common in countries where , is used as the decimal place), 
#read_tsv() reads tab delimited files, 
#read_delim() reads in files with any delimiter.
heights <- read_csv("clinical_trial.csv")
getwd()
setwd("C:/Users/Usuario/Documents/cursos/Data Analysis")
read_csv("a,b,c
1,2,3
4,5,6")
heights <- read_csv("clinical_trial.csv", skip = 1)
?read_delim
read_csv("a,b, c\n1,2,3\n4,5,6")
read_csv("a,b,c\n1,2, 3\n1,2,3")
read_csv("a,b \n 1, 2")
read_csv("a,b\n1,2\na,b")
read_csv("a,b\n1,3")
#parse
parse_logical(c("TRUE", "FALSE", "NA"))
parse_integer(c("1", "2", "3"))
parse_date(c("2010-01-01", "1979-10-14"))
parse_integer(c("1", "231", ".", "456"), na = ".")
parse_character()
parse_double(1.23)
parse_double("1,23", locale = locale(decimal_mark = ","))
parse_number("$100")
parse_number("20%")
parse_number("It cost $123.45")
parse_number("$123,456.789")
parse_number("123.456.789", locale = locale(grouping_mark = "."))
parse_number("123'456'789", locale = locale(grouping_mark = "'"))
charToRaw("Hadley")
x1 <- "El Ni\xf1o was particularly bad this year"
x2 <- "\x82\xb1\x82\xf1\x82\xc9\x82\xbf\x82\xcd"
parse_character(x1, locale = locale(encoding = "Latin1"))
parse_character(x2, locale = locale(encoding = "Shift-JIS"))
fruit <- c("apple", "banana")
parse_factor(c("apple", "banana", "bananana"), levels = fruit)
parse_datetime("2010-10-01T2010")
parse_datetime("20101010")
parse_date("2010-10-01")
library(hms)
parse_time("01:10 am")
parse_time("20:10:01")
#DATE
========================
  Year
%Y (4 digits).
%y (2 digits); 00-69 -> 2000-2069, 70-99 -> 1970-1999.
Month
%m (2 digits).
%b (abbreviated name, like “Jan”).
%B (full name, “January”).
Day
%d (2 digits).
%e (optional leading space).
Time
%H 0-23 hour.
%I 0-12, must be used with %p.
%p AM/PM indicator.
%M minutes.
%S integer seconds.
%OS real seconds.
%Z Time zone
%z (as offset from UTC, e.g. +0800).
========================
#Non-digits
%. skips one non-digit character.
%* skips any number of non-digits.
guess_parser("2010-10-01")
#write a file
write_csv(challenge, "challenge.csv")
write_excel_csv()
