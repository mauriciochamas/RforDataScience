library(nycflights13)
library(dplyr)
library(tidyverse)
flights
View(flights)
#All verbs work similarly:
#The first argument is a data frame.
#The subsequent arguments describe what to do with the data frame, 
#   using the variable names (without quotes).
#The result is a new data frame.
filter(flights, month > 5)
filter(flights, month == 1, day == 1)
filter(flights, month == 11 | month == 12)
filter(flights, month == 11 & month == 12)
filter(flights, month %in% c(11, 12))
filter(flights, !(arr_delay > 20 | dep_delay > 20))
filter(flights, arr_delay <= 20, dep_delay <= 20)
filter(flights, arr_delay <= 20 & dep_delay <= 20)
df <- tibble(x = c(1, NA, 3))
df
filter(df, is.na(x) | x >1)
is.na(df$x)
str(flights)
filter(flights, arr_delay > 120, dest == "IAH" | dest == "HOU", carrier == "UA"
       | carrier == "DL", arr_time > 120 & dep_delay == 0)
arrange(flights, desc(arr_delay))
arrange(flights, sched_dep_time)
select(flights, year, month, day)
select(flights, year: day)
select(flights, -(year:day))
select(flights, starts_with("sche"))
select(flights, ends_with("ime"))
select(flights, contains("dep"))
select(flights, dplyr::contains("time"))
select(flights, matches("(.)\\1"))
select(flights, num_range("x", 1:3))
names(flights)
rename(flights, dep.delay = dep_delay)
select(flights,time_hour, air_time, everything())
select(flights, year, year, year)
flights_sml <- select(flights, year:day, ends_with("delay"), distance, air_time)
mutate(flights_sml, gain = arr_delay - dep_delay, speed = distance/air_time*60)
flights_sml <- select(flights_sml, -c(year:day))
mutate(flights_sml, gain = arr_delay - dep_delay, hours = air_time/60, gain.per.hour = gain/hours)
transmute(flights_sml, gain = arr_delay - dep_delay, hours = air_time/60, gain.per.hour = gain/hours)
#%/% (integer division) and %% (remainder)
transmute(flights, dep_time, hour = dep_time %/% 100, minute = dep_time %% 100)
#lead, lag
x <- 1:10
lag(x)
lead(x)
y <- c(11, 2, 22, NA, 13, 4)
min_rank(y)
#summarise
summarise(flights, delay = mean(dep_delay, na.rm = T))
mean(flights$dep_delay, na.rm = T)
#group_by
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = T))
names(flights)
summarise(group_by(flights, carrier), media = mean(dep_delay, na.rm = T))
linea <- mutate(flights, speed = distance/air_time*60)
velocidad <- summarise(group_by(linea, carrier), media = mean(speed, na.rm = T))
velocidad$ranking <- min_rank(desc(velocidad$media))
velocidad
sapply(split(linea[,20], linea$carrier), colMeans, na.rm = T)
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = T))
by_emp <- group_by(flights, carrier, origin)
summarise(by_emp, count = n(), distancia = mean(distance, na.rm = T))
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = T),
                   delay = mean(arr_delay, na.rm = T))
delay.sum <- summarise(by_dest, count = n(), dist = sum(distance, na.rm = T),
                   delay = sum(arr_delay, na.rm = T))
delay <- filter(delay, count > 20, dest != "HNL")
ggplot(delay, aes(dist, delay)) + geom_point(aes(size = count), alpha = 0.5, 
                  color = "orange") + geom_smooth(se = F)
delay <- flights %>% group_by(dest) %>% summarise(count = n(), 
      dist = mean(distance, na.rm = T), delay = mean(arr_delay, na.rm = T)) %>%
  filter(count > 20, dest != "HNL")
#missing data
not_cancelled <- flights %>% 
  filter(!is.na(dep_delay), !is.na(arr_delay))
which(is.na(flights$arr_delay))
dim(flights)
not_cancelled %>% group_by(year, month, day) %>% summarise(suma = sum(dep_delay),
                tot = n(), mean = mean(dep_delay)) %>% mutate(media = suma/tot)
#count
(delays <- not_cancelled %>% group_by(tailnum) %>% summarise(delay = mean(arr_delay)))
ggplot(delays, aes(delay)) + geom_freqpoly(binwidth = 5)
?flights
fivenum(delays$delay)
delays <- not_cancelled %>% group_by(tailnum) %>% summarise(delay = 
                      mean(arr_delay, na.rm = T), n = n())
ggplot(delays, aes(n, delay)) + geom_point(color = "blue", 
                                position = "jitter", alpha = 0.4)
which.max(delays$delay)
delays %>% filter(n > 25) %>% ggplot(aes(n, delay)) + geom_point(alpha = 0.1)
library(Lahman)
batting <- as_tibble(Batting)
batters <- batting %>% group_by(playerID) %>% 
  summarise(ba = sum(H, na.rm = T)/sum(AB, na.rm = T), 
            ab = sum(AB, na.rm = T))
batters %>% filter(ab > 100) %>% ggplot(aes(ab, ba)) + geom_point() + geom_smooth()
flights_sml <- select(flights, year:day, ends_with("delay"), distance, air_time)
mutate(flights_sml, gain = arr_delay-dep_delay, speed = distance/air_time*60)
not_cancelled %>% group_by(year, month, day) %>% 
  summarise( avg_delay1 = mean(arr_delay),
             avg_delay2 = mean(arr_delay[arr_delay>0]))
flights[,400]
not_cancelled %>% group_by(dest) %>% summarise(dist_sd = sd(distance)) %>%
  arrange(desc(dist_sd))
not_cancelled %>% group_by(year, month, day) %>% summarise(first = min(dep_time),
                                                           last = max(dep_time))
================
not_cancelled %>% group_by( year, month, day) %>%
  mutate(r = min_rank(desc(dep_time))) %>%
  filter(r %in% range(r))
================
not_cancelled %>% group_by(dest) %>%
  summarise(carriers = n_distinct(carrier)) %>%
  arrange(desc(carriers))
not_cancelled %>% group_by(dest) %>% summarise(carrier)
not_cancelled %>% count(dest)
not_cancelled %>% count(carrier) %>% arrange(desc(n))
not_cancelled %>% count(tailnum) %>% arrange(desc(n))
not_cancelled %>% count(tailnum, wt = distance) %>% arrange(desc(n))
flights$carrier[flights$tailnum == "N328AA"]
filter(flights, tailnum == "N328AA") %>% select(carrier)
not_cancelled %>% group_by(year) %>% count(tailnum, wt = distance) %>% arrange(desc(n))
not_cancelled %>% group_by(origin) %>% count(carrier, wt = air_time)
names(not_cancelled)
# flights from the previous day
not_cancelled %>% group_by(year, month, day) %>%
  summarise(n_early = sum(dep_time > 1 & dep_time < 400))
not_cancelled %>% group_by(year, month, day) %>% summarise(hour_p = mean(arr_delay > 60))
not_cancelled %>% group_by(year, month, day) %>% summarise(hour_p = sum(arr_delay > 60))
daily <- group_by(flights, year, month, day)
daily
per_day <- summarise(daily, flights = n())
per_day
per_month <- summarise(per_day, flights = sum(flights))
per_month
per_year <- summarise(per_month, flights = sum(flights))
per_year
daily %>% ungroup() %>% summarise(flights = n())
daily
not_cancelled %>% count(dest) 
not_cancelled %>% group_by(dest) %>% summarise(n())
not_cancelled %>% count(tailnum, wt = distance)
not_cancelled %>% group_by(tailnum) %>% summarise(sum(distance))
table(is.na(flights$air_time))
#Exercises
flights  %>% group_by(carrier, dest)  %>% summarise(n())
delay <- mutate(flights, del = dep_delay + arr_delay)
n_distinct(delay$dest)
n_distinct(delay$carrier)
top.dest <- delay %>% group_by(dest) %>% summarise(retraso = sum(del, na.rm = T)) %>% arrange(desc(retraso))
top.dest
delay.10dest <- filter(delay, dest == c("ATL", "ORD", "FLL", "MCO", "CLT", "SFO", "DCA",
                       "RDU", "BOS", "DEN"))
table(delay.10dest$dest)
ggplot(delay.10dest) + geom_bar(aes(dest, fill = carrier), position = "dodge")
delay.10dest %>% group_by(dest) %>% summarise(sum(del, na.rm = T))
top.carrier <- delay %>% group_by(carrier) %>% summarise(retraso = sum(del, na.rm = T)) %>% arrange(desc(retraso))
delay$bi <- delay$dest == c("ATL", "ORD", "FLL", "MCO", "CLT", "SFO", "DCA", "RDU", "BOS", "DEN")
table(delay$dest[delay$bi == T])
delay$dest2 <- min_rank(delay$dest)
ggplot(delay) + geom_point(aes(carrier, del, color = bi), position = "jitter")
ggplot(delay) + geom_point(aes(carrier, dest2, color = del), position = "jitter")
ggplot(delay) + geom_point(aes(carrier, del, color = dest2), position = "jitter")
=======
cancelled <- flights %>% filter(is.na(dep_delay), is.na(arr_delay))
cancelled %>% group_by(day) %>% summarise(mean(n()))
prueba <- cancelled %>% group_by(day) %>% summarise(count = n()) %>% prop.table()
ggplot() + geom_bar(aes(day))
ggplot(cancelled) + geom_bar(aes(month))
library(lubridate)
cancelled$lulu <- wday(cancelled$time_hour, label = T)
table(cancelled$lulu)
ggplot(cancelled) + geom_bar(aes(lulu))
cancelled %>% group_by(lulu) %>% summarise(count = n()) %>% prop.table()
cancelled$lulu <- wday(cancelled$time_hour)
cancelled %>% group_by(lulu) %>% summarise(prop = mean(n()))
flights %>% group_by(day) %>% summarise(retra = mean(dep_delay > 0, na.rm =T)) %>%
ggplot()+geom_point(aes(day, retra))
flight <- flights
flight$lulu <- wday(flight$time_hour, label = T)
table(flight$lulu)
str(flight)
flight %>% group_by(lulu) %>% summarise(retra = mean(dep_delay > 0, na.rm =T)) %>%
  ggplot()+geom_point(aes(lulu, retra))
flight %>% group_by(tailnum) %>% summarise( retra = sum(dep_delay > 60, na.rm = T)) %>%
  arrange(desc(retra))
flights_sml <- select(flights, year:day, ends_with("delay"), distance, air_time)
mutate(flights_sml, gain = arr_delay - dep_delay, speed = distance/air_time*60)
flights_sml %>% group_by(month, day) %>% filter(rank(desc(arr_delay))<10)
#group mutates
top.dest <- flights %>% group_by(dest) %>% filter(n()>365)
(top.tail <- flights %>% group_by(tailnum) %>% filter(n()>365))
top <- as.data.frame(table(top.tail$tailnum))
arrange(top, desc(Freq))
top.dest %>% filter(arr_delay > 0) %>% mutate(prop_delay = arr_delay/sum(arr_delay)) %>%
  select(day, dest, arr_delay, prop_delay)
